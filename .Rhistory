library("ARI")
install.packages("ARI", dependencies = TRUE)
install.packages("ari", dependencies = TRUE)
lambdas <- c("10000.0", "1000.0", "100.0", "10.0", "1.0", "0.1", "0.01", "0.001", "0.0001", "1e-05", "0.0")
lambdas <- rev(lambdas)
cos_nmi <- c()
cos_ari <- c()
for(lambda in lambdas){
#file <- paste("result_wc_nmtf/lambda/cos/wc-nmtf_Z_l", lambda, ".csv", sep = "")
file <- paste("result_wc_nmtf/lambda/p_tra/wc-nmtf_Z_l", lambda, "_p_tra.csv", sep = "")
res_wc_nmtf <- read.csv(file, header = TRUE)
res_wc_nmtf <- t( normalize( t(res_wc_nmtf) ) )
label_res <- apply(res_wc_nmtf, MARGIN = 1, FUN=which.max)
t_nmi <- NMI(label_res, labelK)
t_ari <- ARI(label_res, labelK)
cos_nmi <- c(cos_nmi, t_nmi)
cos_ari <- c(cos_ari, t_ari)
}
for(lambda in lambdas){
#file <- paste("result_wc_nmtf/lambda/cos/wc-nmtf_Z_l", lambda, ".csv", sep = "")
file <- paste("result_wc_nmtf/lambda/p_tra/wc-nmtf_Z_l", lambda, "_p_tra.csv", sep = "")
res_wc_nmtf <- read.csv(file, header = TRUE)
res_wc_nmtf <- t( normalize( t(res_wc_nmtf) ) )
label_res <- apply(res_wc_nmtf, MARGIN = 1, FUN=which.max)
t_nmi <- NMI(label_res, labelK)
t_ari <- ARI(label_res, labelK)
cos_nmi <- c(cos_nmi, t_nmi)
cos_ari <- c(cos_ari, t_ari)
}
temp = c(1:10)
matrix(c, nrow = 5)
matrix(temp, nrow = 5)
t <- Sys.time()
t2 <- Sys.time()
t2 - t
temp <- t2 - t
temp
plot(temp)
?dist
?svg
t <- c(1,1,1,2,2,2,2,1,1,1)
t2 <- t -1
t2
library(aricode)
NMI(t, t2)
t2 <- t*4
NMI(t, t2)
setwd("/media/matthieu/Data/Matthieu/##Etude/#M1/S2/BD2/opinion-mining")
library(aricode)
library(R.matlab)
normalize <- function(x) {x / sqrt(rowSums(x^2))}
normalizeByCol <- function(df) { t( normalize( t(df) ) )}
sent_process <- function(x){ x[1] - x[2] + 1 }
k <- 2
lexicon_sent <- read.csv("results/tweets_clean10.csv_lexicon_sentiment.csv")
lexicon_sent <- read.csv("results/tweets_clean10.csv_lexicon_sentiment_pos_neg.csv", row.names = 1)
lexicon_cluster <- read.csv("results/tweets_clean10.csv_lexicon_sentiment_pos_neg.csv", row.names = 1)
length(lexicon_cluster[lexicon_cluster == 1])
length(lexicon_cluster[lexicon_cluster == 0])
dim(lexicon_cluster)
lexicon_cluster <- read.csv("results/tweets_clean10.csv_lexicon_sentiment_pos_neg.csv", row.names = 1)
skmeans_cluster = read.csv("results/doc2vec_skmeans_clusters.csv", row.names = 1)
NMI(skmeans_cluster, lexicon_cluster)
ARI(skmeans_cluster, lexicon_cluster)
skmeans_cluster
lexicon_cluster <- as.factor(lexicon_cluster)
skmeans_cluster <- as.factor(skmeans_cluster)
NMI(skmeans_cluster, lexicon_cluster)
ARI(skmeans_cluster, lexicon_cluster)
skmeans_cluster
skmeans_cluster = read.csv("results/doc2vec_skmeans_clusters.csv", row.names = 1)
skmeans_cluster
skmeans_cluster <- as.factor(skmeans_cluster)
skmeans_cluster
skmeans_cluster <- as.array(skmeans_cluster)
skmeans_cluster
skmeans_cluster = read.csv("results/doc2vec_skmeans_clusters.csv", row.names = 1)
skmeans_cluster <- as.array(skmeans_cluster)
skmeans_cluster
lexicon_cluster <- read.csv("results/tweets_clean10.csv_lexicon_sentiment_pos_neg.csv", row.names = 1)
skmeans_cluster = read.csv("results/doc2vec_skmeans_clusters.csv", row.names = 1)
NMI(skmeans_cluster, lexicon_cluster)
ARI(skmeans_cluster, lexicon_cluster)
as.vector(skmeans_cluster)
skmeans_cluster <- as.vector(skmeans_cluster)
lexicon_cluster <- as.vector(lexicon_cluster)
NMI(skmeans_cluster, lexicon_cluster)
head(lexicon_cluster)
lexicon_cluster <- read.csv("results/tweets_clean10.csv_lexicon_sentiment_pos_neg.csv", row.names = 1)
head(lexicon_cluster)
dim(lexicon_cluster)
kmeans_cluster = read.csv("results/doc2vec_kmeans_clusters.csv", row.names = 1)
kmeans_ind1 = which(kmeans_cluster == 1)
kmeans_ind2 = which(kmeans_cluster == 2)
length(kmeans_cluster[kmeans_ind1,])
length(kmeans_cluster[kmeans_ind2,])
skmeans_cluster = read.csv("results/doc2vec_skmeans_clusters.csv", row.names = 1)
skmeans_ind1 = which(skmeans_cluster == 1)
skmeans_ind2 = which(skmeans_cluster == 2)
length(skmeans_cluster[skmeans_ind1,])
length(skmeans_cluster[skmeans_ind2,])
wcnmtf_cluster = read.csv("results/doc2vec_wc_nmtf_clusters.csv", row.names = 1)
wcnmtf_ind1 = which(wcnmtf_cluster == 1)
wcnmtf_ind2 = which(wcnmtf_cluster == 2)
length(wcnmtf_cluster[wcnmtf_ind1,])
length(wcnmtf_cluster[wcnmtf_ind2,])
